{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"after-login\"\n};\nconst _hoisted_2 = {\n  class: \"add-data\"\n};\nconst _hoisted_3 = {\n  class: \"user-table\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"thead-bg\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"id\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"avatars\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"email\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"first name\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"last name\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"edit\")])], -1 /* HOISTED */);\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" <a href=\\\"#login\\\">Logout</a> \"), _createVNode(_component_router_link, {\n    to: \"/login\",\n    class: \"ctn btn-logout\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Logout\")]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Id\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.id = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.id]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.firstName = $event),\n    placeholder: \"First Name\",\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.firstName]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.lastName = $event),\n    placeholder: \"Last Name\",\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.lastName]]), _createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"file\",\n    accept: \"image/*\",\n    onChange: _cache[4] || (_cache[4] = (...args) => $options.selectFile && $options.selectFile(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), _createElementVNode(\"button\", {\n    class: \"ctn\",\n    onClick: _cache[5] || (_cache[5] = $event => $options.addData())\n  }, \"Add Data\")]), _createElementVNode(\"div\", null, [_createElementVNode(\"table\", _hoisted_3, [_hoisted_4, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, (user, index) => {\n    return _openBlock(), _createElementBlock(\"tbody\", {\n      key: index\n    }, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString(user.id), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"img\", {\n      src: user.avatar,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_5)]), _createElementVNode(\"td\", null, _toDisplayString(user.email), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.first_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.last_name), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.deleteData(index),\n      class: \"btn btn-delete\"\n    }, \"delete\", 8 /* PROPS */, _hoisted_6)])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAa;;EAIjBA,KAAK,EAAC;AAAU;;EAeZA,KAAK,EAAC;AAAY;gCACvBC,oBASQ;EATDD,KAAK,EAAC;AAAU,iBACrBC,oBAOK,0BANHA,oBAAuB;EAAnBC,KAAK,EAAC;AAAK,GAAC,IAAE,gBAClBD,oBAA4B;EAAxBC,KAAK,EAAC;AAAK,GAAC,SAAO,gBACvBD,oBAA0B;EAAtBC,KAAK,EAAC;AAAK,GAAC,OAAK,gBACrBD,oBAA+B;EAA3BC,KAAK,EAAC;AAAK,GAAC,YAAU,gBAC1BD,oBAA8B;EAA1BC,KAAK,EAAC;AAAK,GAAC,WAAS,gBACzBD,oBAAyB;EAArBC,KAAK,EAAC;AAAK,GAAC,MAAI;;;;;uBA3B9BC,oBA6CM,OA7CNC,UA6CM,GA5CJC,sDAAoC,EACpCC,aAAoEC;IAAvDC,EAAE,EAAC,QAAQ;IAACR,KAAK,EAAC;;sBAAiB,MAAM,kBAAN,QAAM;;MAEtDC,oBAYM,OAZNQ,UAYM,mBAXJR,oBAAmD;IAA5CS,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,IAAI;+DAAUC,QAAE;iDAAFA,QAAE,qBAC/CX,oBAAyD;IAAlDS,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,OAAO;+DAAUC,WAAK;iDAALA,WAAK,qBACrDX,oBAAkE;+DAAlDW,eAAS;IAAED,WAAW,EAAC,YAAY;IAACD,IAAI,EAAC;iDAAzCE,eAAS,qBACzBX,oBAAgE;+DAAhDW,cAAQ;IAAED,WAAW,EAAC,WAAW;IAACD,IAAI,EAAC;iDAAvCE,cAAQ,KACxBX,oBAKE;IAJAS,IAAI,EAAC,MAAM;IACXG,GAAG,EAAC,MAAM;IACVC,MAAM,EAAC,SAAS;IACfC,QAAM,yCAAEC,mDAAU;kDAErBf,oBAAwD;IAAhDD,KAAK,EAAC,KAAK;IAAEiB,OAAK,sCAAED,gBAAO;KAAI,UAAQ,KAGjDf,oBA0BM,cAzBJA,oBAwBQ,SAxBRiB,UAwBQ,GAvBNC,UASQ,qBACRhB,oBAYQiB,6BAZuBR,WAAK,GAArBS,IAAI,EAAEC,KAAK;yBAA1BnB,oBAYQ;MAZ+BoB,GAAG,EAAED;IAAK,IAC/CrB,oBAUK,aATHA,oBAAsB,6BAAfoB,IAAI,CAACG,EAAE,kBACdvB,oBAA0C,aAAtCA,oBAAiC;MAA3BwB,GAAG,EAAEJ,IAAI,CAACK,MAAM;MAAEC,GAAG,EAAC;2CAChC1B,oBAAyB,6BAAlBoB,IAAI,CAACO,KAAK,kBACjB3B,oBAA8B,6BAAvBoB,IAAI,CAACQ,UAAU,kBACtB5B,oBAA6B,6BAAtBoB,IAAI,CAACS,SAAS,kBACrB7B,oBAGK,aAFHA,oBAAyE;MAAhEgB,OAAK,YAAED,mBAAU,CAACM,KAAK;MAAGtB,KAAK,EAAC;OAAiB,QAAM","names":["class","_createElementVNode","scope","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_router_link","to","_hoisted_2","type","placeholder","$data","ref","accept","onChange","$options","onClick","_hoisted_3","_hoisted_4","_Fragment","user","index","key","id","src","avatar","alt","email","first_name","last_name"],"sourceRoot":"","sources":["C:\\Users\\onuso\\OneDrive\\เดสก์ท็อป\\adius test\\Test7Day\\TestTest7day\\src\\views\\AfterLogin.vue"],"sourcesContent":["<template>\r\n  <div class=\"after-login\">\r\n    <!-- <a href=\"#login\">Logout</a> -->\r\n    <router-link to=\"/login\" class=\"ctn btn-logout\">Logout</router-link>\r\n\r\n    <div class=\"add-data\">\r\n      <input type=\"text\" placeholder=\"Id\" v-model=\"id\" />\r\n      <input type=\"text\" placeholder=\"Email\" v-model=\"email\" />\r\n      <input v-model=\"firstName\" placeholder=\"First Name\" type=\"text\" />\r\n      <input v-model=\"lastName\" placeholder=\"Last Name\" type=\"text\" />\r\n      <input\r\n        type=\"file\"\r\n        ref=\"file\"\r\n        accept=\"image/*\"\r\n        @change=\"selectFile\"\r\n      />\r\n      <button class=\"ctn\" @click=\"addData()\">Add Data</button>\r\n    </div>\r\n\r\n    <div>\r\n      <table class=\"user-table\">\r\n        <thead class=\"thead-bg\">\r\n          <tr>\r\n            <th scope=\"col\">id</th>\r\n            <th scope=\"col\">avatars</th>\r\n            <th scope=\"col\">email</th>\r\n            <th scope=\"col\">first name</th>\r\n            <th scope=\"col\">last name</th>\r\n            <th scope=\"col\">edit</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"(user, index) in users\" :key=\"index\">\r\n          <tr>\r\n            <td>{{ user.id }}</td>\r\n            <td><img :src=\"user.avatar\" alt=\"\" /></td>\r\n            <td>{{ user.email }}</td>\r\n            <td>{{ user.first_name }}</td>\r\n            <td>{{ user.last_name }}</td>\r\n            <td>\r\n              <button @click=\"deleteData(index)\" class=\"btn btn-delete\">delete</button>\r\n             \r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default {\r\n  name: \"afterLogin\",\r\n  components: {},\r\n  data() {\r\n    return {\r\n      users: [],\r\n      // showPopup: true,\r\n      id: \"\",\r\n      email: \"\",\r\n      avatar: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      ShowAvatarUrl: \"\",\r\n\r\n    };\r\n  },\r\n  methods: {\r\n    async usersData() {\r\n      // this.users = [];\r\n      await axios.get(\"https://reqres.in/api/users\")\r\n      .then((response) => {\r\n        const data = response.data.data;\r\n        this.users = data;\r\n        \r\n        console.log(response)\r\n      });\r\n    },\r\n    addData() {\r\n      axios\r\n        .post(\"https://reqres.in/api/users\", {\r\n          id: this.id,\r\n          email: this.email,\r\n          first_name: this.firstName,\r\n          last_name: this.lastName,\r\n          avatar: this.avatar,\r\n        })\r\n        .then((response) => {\r\n          const data = response.data;\r\n          this.users.push(data);\r\n          this.id = \"\";\r\n          this.email = \"\";\r\n          this.firstName = \"\";\r\n          this.lastName = \"\";\r\n          this.avatar = \"\";\r\n        });\r\n    },\r\n\r\n    deleteData(index) {\r\n      axios\r\n      .delete(\"https://reqres.in/api/users\")\r\n      .then((response) => {\r\n  \r\n        // const data = response.data;\r\n        // // this.users.splice(data,1)\r\n        // this.users = data\r\n       \r\n        \r\n        this.users.splice(index,1);\r\n    //     console.log(response);\r\n      });\r\n    },\r\n    \r\n  //    selectFile() {\r\n  //     this.avatar = this.$refs.file.files[0];\r\n  // },\r\n\r\n  selectFile(e){\r\n    let selectImage = e.target.files[0];\r\n    this.createBase64Image(selectImage);\r\n  },\r\n  createBase64Image(fileObject) {\r\n    let reader = new FileReader();\r\n\r\n    reader.onload = (e) => {\r\n      this.avatar = e.target.result;\r\n      this.uploadImage();\r\n    };\r\n    reader.readAsDataURL(fileObject);\r\n  },\r\n  uploadImage() {\r\n    const {avatar} = this;\r\n    axios\r\n    .post(\"https://reqres.in/api/users\", {avatar})\r\n    .then((response) => {\r\n      this.ShowAvatarUrl = response.data.url;\r\n    })\r\n  },\r\n \r\n  },\r\n  mounted() {\r\n    this.usersData();\r\n  },\r\n\r\n  // async mounted() {\r\n  //   let results = await axios.get(\"https://reqres.in/api/users\");\r\n  //   console.log(\"results\", results);\r\n  //   this.list = results.data.data;\r\n  //   let user = localStorage.getItem(\"user-info\");\r\n  //   this.name = JSON.parse(user).name;\r\n    // if (!user) {\r\n    //   this.$route.push({ name: \"login\" });\r\n    // }\r\n  // },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/main.scss\";\r\n\r\ntable {\r\n  font-size: 1.6rem;\r\n  text-align: center;\r\n  font-weight: bold;\r\n}\r\n.user-table {\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n\r\n  & td,\r\n  & th {\r\n    border: 1px solid $gray;\r\n    padding: 8px;\r\n  }\r\n\r\n  & tr:hover {\r\n    background-color: $white;\r\n  }\r\n\r\n  & th {\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    background-color: $gray;\r\n    color: $white;\r\n  \r\n  }\r\n\r\n  & img {\r\n    width: 70px;\r\n    height: 70px;\r\n    border-radius: 50%;\r\n  }\r\n}\r\n\r\n.add-data {\r\n  & input {\r\n    @include input;\r\n    margin-bottom: 20px;\r\n    padding-left: 20px;\r\n    display: block;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    height: 40px;\r\n    width: 300px;\r\n\r\n    &:nth-last-child(2) {\r\n      border: none;\r\n    }\r\n  }\r\n  & button {\r\n    @include button-ctn;\r\n    width: 320px;\r\n    height: 40px;\r\n    margin-bottom: 20px;\r\n    padding-left: 20px;\r\n    display: block;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n}\r\n\r\n.btn-logout {\r\n  display: block;\r\n  margin: 30px;\r\n  text-align: center;\r\n  justify-items: center;\r\n  align-items: center;\r\n}\r\n\r\n.btn {\r\n  @include btn;\r\n}\r\n\r\n// .popup-show {\r\n//   position: fixed;\r\n//   top: 50%;\r\n//   left: 50%;\r\n//   transform: translate(-50%, -50%);\r\n//   z-index: 99;\r\n//   width: 100%;\r\n//   max-width: 400px;\r\n//   background-color: rgba(180, 120, 200, 0.9);\r\n//   border-radius: 20px;\r\n//   text-align: right;\r\n//   padding: 10px;\r\n// }\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}